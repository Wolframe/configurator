TRANSACTION selectConfigurationRequiredFeatureCategoryList
BEGIN
INTO category DO
	SELECT
		RecipeContent.categoryID AS "id",
		Category.name as "name",
		RecipeContent.minQuantity AS "minQuantity",
		RecipeContent.maxQuantity AS "maxQuantity",
		Component.ID as "componentID",
		Component.name as "componentName",
		ComponentCategory.name as "componentCategory"
	FROM RecipeContent, Category,
		Component, Configuration,
		Category as ComponentCategory
	WHERE RecipeContent.categoryID = Category.ID
	AND RecipeContent.categoryID = Component.categoryID
	AND Component.categoryID = ComponentCategory.ID
-- remove all components which are hard-coded in the recipe
	AND Component.ID NOT IN (
		SELECT componentID FROM ConfigComponent
			WHERE configID=$(id) AND fromRecipe='1'
	)
-- remove all components (for now, later, count quantities) which are
-- directly of a certain category (i.e. laptop platform). The user
-- picked them already
	AND Component.categoryID NOT IN (
		SELECT categoryID
			FROM ConfigComponent,Component WHERE configID=$(id)
			AND Component.ID=ConfigComponent.componentID
			AND fromRecipe='0')
	AND RecipeContent.recipeID = Configuration.recipeID
	AND Configuration.ID = $(id)
	ORDER BY RecipeContent.categoryID;
END


TRANSACTION addConfigurationComponent
BEGIN
	DO INSERT INTO ConfigComponent( configID, componentID, quantity, fromRecipe )
		VALUES( $(id), $(componentID), $(quantity), '0' );
END


TRANSACTION deleteConfigurationComponent
BEGIN
	DO DELETE FROM ConfigComponent
		WHERE configID = $(id)
		AND componentID = $(componentID);
END


