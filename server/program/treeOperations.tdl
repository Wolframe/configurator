
TEMPLATE<TreeTable>
SUBROUTINE treeAddNode( parentID, name, normalizedName)
BEGIN
	DO NONEMPTY UNIQUE SELECT rgt FROM TreeTable WHERE ID = $PARAM.parentID;
	DO UPDATE TreeTable SET rgt = rgt + 2 WHERE rgt >= $1;
	DO UPDATE TreeTable SET lft = lft + 2 WHERE lft > $1;
	DO INSERT INTO TreeTable (parentID, name, normalizedName, lft, rgt) VALUES ($PARAM.parentID, $PARAM.name, $PARAM.normalizedName, $1, $1+1);
	INTO . DO NONEMPTY UNIQUE SELECT ID AS "ID" from TreeTable WHERE normalizedName = $PARAM.normalizedName;
END

TEMPLATE<TreeTable>
SUBROUTINE treeDeleteNode( id)
BEGIN
	DO NONEMPTY UNIQUE SELECT lft,rgt,rgt-lft+1 AS width FROM TreeTable WHERE ID = $PARAM.id AND ID != '1';
	DO DELETE FROM TreeTable WHERE lft >= $1 AND lft <= $2;
	DO UPDATE TreeTable SET lft = lft-$3 WHERE lft>$2;
	DO UPDATE TreeTable SET rgt = rgt-$3 WHERE rgt>$2;
END

TEMPLATE<TreeTable>
SUBROUTINE treeSelectTopNodes( id)
BEGIN
	DO SELECT P2.ID AS "ID",P2.parentID AS "parentID",P2.name,P2.description FROM TreeTable AS P1, TreeTable AS P2 WHERE P1.lft > P2.lft AND P1.lft < P2.rgt AND P1.ID = $PARAM.id ORDER BY P2.ID;
END

TEMPLATE<TreeTable>
SUBROUTINE treeSelectSubNodes( id)
BEGIN
	DO SELECT P1.ID AS "ID",P1.parentID AS "parentID",P1.name,P1.description FROM TreeTable AS P1, TreeTable AS P2 WHERE P1.lft BETWEEN P2.lft AND P2.rgt AND P2.ID = $PARAM.id ORDER BY P1.ID;
END


