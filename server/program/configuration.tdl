TRANSACTION selectConfigurationList
RESULT INTO list
BEGIN
	INTO configuration DO
		SELECT Configuration.ID AS "id", Configuration.name AS "name",
			Configuration.description,
			Category.name AS "categoryName",
			comment
		FROM Configuration, Category
		WHERE Configuration.categoryID = Category.ID;
END

TRANSACTION addConfiguration
BEGIN
	DO INSERT INTO Configuration( name, description, comment, recipeID )
		VALUES( $(name), $(description), $(comment), $(recipe/id) );
	DO NONEMPTY UNIQUE getLastConfigurationID( );
	DO UPDATE Configuration SET categoryID =
		(SELECT categoryID from Recipe WHERE ID=$(recipe/id) )
		WHERE ID = $1;
	DO NONEMPTY UNIQUE getLastConfigurationID( );
	DO INSERT INTO ConfigComponent( configID, componentID, quantity, fromRecipe )
		SELECT $1, componentID, quantity, '1' FROM RecipeComponent
			WHERE RecipeComponent.recipeID = $(recipe/id);
	INTO configuration DO NONEMPTY UNIQUE getLastConfigurationID( );
END

TRANSACTION updateConfiguration
BEGIN
	DO UPDATE Configuration SET name=$(name),
		description=$(description),
		comment=$(comment)
		WHERE ID=$(id);
END

TRANSACTION deleteConfiguration
BEGIN
	DO DELETE FROM ConfigComponent WHERE configID = $(id);
	DO DELETE FROM Configuration WHERE ID = $(id);
END

TRANSACTION selectConfiguration
RESULT INTO configuration
BEGIN
	INTO . DO
		SELECT Configuration.ID AS "id", name, description,
			comment
			FROM Configuration
			WHERE Configuration.ID = $(id);
	INTO category DO
		SELECT categoryID AS "id", Category.name AS "_"
			FROM Configuration, Category
			WHERE Configuration.ID = $(id)
			AND Configuration.CategoryID = Category.ID;
END

TRANSACTION selectConfiguredComponentsFix
RESULT INTO list
BEGIN
	INTO component DO
		SELECT Component.ID AS "id", code, Component.name AS "name",
			Category.name AS "categoryName",
			Manufacturer.name AS "manufacturerName",
			mfgCode AS "mfgCode",
			Component.webPage AS "webPage",
			Component.description AS "description",
			quantity,
			price
			FROM ConfigComponent, Component, Category, Manufacturer
			WHERE Component.ID = ConfigComponent.componentID
			AND Component.categoryID = Category.ID
			AND Component.manufacturerID = Manufacturer.ID
			AND configID = $(configID)
			AND fromRecipe = '1';
END

TRANSACTION selectConfiguredComponentsUser
RESULT INTO list
BEGIN
	INTO component DO
		SELECT Component.ID AS "id", code, Component.name AS "name",
			Category.name AS "categoryName",
			Manufacturer.name AS "manufacturerName",
			mfgCode AS "mfgCode",
			Component.webPage AS "webPage",
			Component.description AS "description",
			quantity,
			quantity as "featureMinQuantity",
			quantity as "featureMaxQuantity",
			price
			FROM ConfigComponent, Component, Category, Manufacturer
			WHERE Component.ID = ConfigComponent.componentID
			AND Component.categoryID = Category.ID
			AND Component.manufacturerID = Manufacturer.ID
			AND configID = $(configID)
			AND fromRecipe = '0';
END

TRANSACTION selectConfiguredComponents
RESULT INTO list
BEGIN
	INTO component DO
		SELECT Component.ID AS "id", code, Component.name AS "name",
			Category.name AS "categoryName",
			Manufacturer.name AS "manufacturerName",
			mfgCode AS "mfgCode",
			Component.webPage AS "webPage",
			Component.description AS "description",
			quantity,
			price
			FROM ConfigComponent, Component, Category, Manufacturer
			WHERE Component.ID = ConfigComponent.componentID
			AND Component.categoryID = Category.ID
			AND Component.manufacturerID = Manufacturer.ID
			AND configID = $(configID);
END

TRANSACTION ConfiguratorAddComponent
BEGIN
	DO INSERT INTO ConfigComponent( configID, componentID, quantity, fromRecipe )
		VALUES( $(configuration/id), $(configuration/componentID),
			$(configuration/quantity), '0' );
END

TRANSACTION ConfiguratorDeleteComponent
BEGIN
	DO DELETE FROM ConfigComponent
		WHERE configID = $(configuration/id)
		AND componentID = $(configuration/componentID);
END

TRANSACTION selectRequiredFeatures
RESULT INTO list
BEGIN
	INTO category DO
		SELECT
			RecipeContent.categoryID AS "id",
			Category.name as "name",
			RecipeContent.minQuantity AS "minQuantity",
			RecipeContent.maxQuantity AS "maxQuantity",
			Component.ID as "componentID",
			Component.name as "componentName",
			ComponentCategory.name as "componentCategory"
		FROM RecipeContent, Category, CategRequires,
			ComponentProvides, Component, Configuration,
			Category as ComponentCategory
		WHERE RecipeContent.categoryID = Category.ID
		AND CategRequires.categoryID = RecipeContent.categoryID
		AND CategRequires.minQuantity >= RecipeContent.minQuantity
		AND ComponentProvides.featureID = CategRequires.featureID
		AND ComponentProvides.minQuantity >= CategRequires.minQuantity
		AND Component.ID = ComponentProvides.componentID
		AND Component.categoryID = ComponentCategory.ID
		AND Component.ID NOT IN (SELECT componentID FROM ConfigComponent WHERE fromRecipe='0')
		AND RecipeContent.recipeID = Configuration.recipeID
		AND Configuration.ID = $(configID);
END
