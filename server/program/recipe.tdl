TRANSACTION selectRecipeList
RESULT INTO list
BEGIN
	INTO recipe DO
		SELECT Recipe.ID AS "id", Recipe.name AS "name",
			Recipe.description,
			Category.name AS "categoryName",
			creationDate AS "creationDate", comment
		FROM Recipe
		LEFT JOIN Category
		ON Recipe.categoryID = Category.ID;
END

TRANSACTION addRecipe
BEGIN
	DO INSERT INTO Recipe( name, normalizedName, description, categoryID, creationDate, comment )
		VALUES ( $(name), $(normalizedName), $(description), $(categoryID), datetime('now'), $(comment) );
	INTO . DO NONEMPTY UNIQUE SELECT ID AS "ID" from Recipe WHERE normalizedName = $(normalizedName);
	FOREACH picture DO INSERT INTO RecipePicture( recipeID, pictureID ) VALUES( $1, $(id) );
	DO DELETE FROM RecipePicture WHERE pictureID IS NULL;		
END

TRANSACTION updateRecipe
BEGIN
	DO DELETE FROM RecipePicture WHERE recipeID = $(id);
	DO UPDATE Recipe SET name=$(name), normalizedName=$(normalizedName),
		description=$(description), categoryID=$(categoryID),
		creationDate=datetime('now'), comment=$(comment)
		WHERE ID=$(id);
	FOREACH picture DO INSERT INTO RecipePicture( recipeID, pictureID ) VALUES( $(/id), $(id) );
	DO DELETE FROM RecipePicture WHERE pictureID IS NULL;		
END

TRANSACTION deleteRecipe
BEGIN
	DO DELETE FROM RecipePicture WHERE recipeID = $(id);
	DO DELETE FROM Recipe WHERE ID = $(id);
END

TRANSACTION selectRecipe
RESULT INTO recipe
BEGIN
	INTO . DO
		SELECT Recipe.ID AS "id", name, description,
			creationDate AS "creationDate", comment
			FROM Recipe
			WHERE Recipe.ID = $(id);
	INTO category DO
		SELECT categoryID AS "id", Category.name AS "_"
			FROM Recipe, Category
			WHERE Recipe.ID = $(id)
			AND Recipe.CategoryID = Category.ID;
	INTO picture DO
		SELECT RecipePicture.pictureID AS "id"
			FROM RecipePicture
			WHERE RecipePicture.recipeID = $(id);
END

--
-- selectRecipeCategoriesRequired : temporay relation storage for annotated category/feature relations
--
TRANSACTION selectRecipeCategoryList
BEGIN
	DO CREATE LOCAL TEMPORARY TABLE IDlist (categoryID INT, minQuantity INT, maxQuantity INT) ON COMMIT DROP;
	FOREACH /category DO INSERT INTO IDlist (categoryID, minQuantity, maxQuantity) VALUES ($(id),convert_to_integer($(minQuantity)),convert_to_integer($(maxQuantity)));
	DO DELETE FROM IDlist WHERE categoryID IS NULL;
	FOREACH /add DO DELETE FROM IDlist WHERE categoryID=$(id);
	FOREACH /add DO INSERT INTO IDlist (categoryID, minQuantity, maxQuantity) VALUES ($(id),$(minQuantity),$(maxQuantity));
	FOREACH /remove DO DELETE FROM IDlist WHERE categoryID=$(id);
	INTO RecipeCategory DO
		SELECT
			categoryID AS "id",
			Category.name AS "name",
			minQuantity AS "minQuantity",
			maxQuantity AS "maxQuantity"
		FROM IDlist, Category
		WHERE Category.ID = IDlist.categoryID;
END

TRANSACTION selectRecipeCategory
BEGIN
	INTO . DO
		SELECT
			$(id) AS id,
			$(minQuantity) AS "minQuantity",
			$(maxQuantity) AS "maxQuantity";
END

--
-- selectRecipeComponentsRequired : temporay relation storage for annotated category/feature relations
--
TRANSACTION selectRecipeComponentList
BEGIN
	DO CREATE LOCAL TEMPORARY TABLE IDlist (componentID INT, minQuantity INT, maxQuantity INT) ON COMMIT DROP;
	FOREACH /component DO INSERT INTO IDlist (componentID, minQuantity, maxQuantity) VALUES ($(id),convert_to_integer($(minQuantity)),convert_to_integer($(maxQuantity)));
	DO DELETE FROM IDlist WHERE componentID IS NULL;
	FOREACH /add DO DELETE FROM IDlist WHERE componentID=$(id);
	FOREACH /add DO INSERT INTO IDlist (componentID, minQuantity, maxQuantity) VALUES ($(id),$(minQuantity),$(maxQuantity));
	FOREACH /remove DO DELETE FROM IDlist WHERE componentID=$(id);
	INTO RecipeComponent DO
		SELECT
			componentID AS "id",
			Component.name AS "name",
			minQuantity AS "minQuantity",
			maxQuantity AS "maxQuantity"
		FROM IDlist, Component
		WHERE Component.ID = IDlist.componentID;
END

TRANSACTION selectRecipeComponent
BEGIN
	INTO . DO
		SELECT
			$(id) AS id,
			$(minQuantity) AS "minQuantity",
			$(maxQuantity) AS "maxQuantity";
END
