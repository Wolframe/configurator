INCLUDE treeOperations.tdl

TRANSACTION addTag
PREPROCESS
BEGIN
	INTO normalizedName DO name( name );			-- call 'name' normalizer
	INTO . DO preprocTreeNodeGetParentIdIfRoot( . );	-- get parentID attribute as _parentID
END
BEGIN
	INTO . DO treeAddNode<Tag>( $(_parentID), $(name), $(normalizedName));
	DO UPDATE Tag SET description = $(description) WHERE ID = $RESULT.ID;
END


TRANSACTION deleteTag
BEGIN
	DO treeDeleteNode<Tag>( $(id));
END


TRANSACTION updateTag
PREPROCESS
BEGIN
	INTO normalizedName DO name( name );	-- call 'name' normalizer
END
BEGIN
	DO UPDATE Tag SET name = $(name), normalizedName = $(normalizedName), description = $(description) WHERE ID = $(id);
END


TRANSACTION selectTag
BEGIN
	INTO . DO NONEMPTY UNIQUE SELECT ID AS id,parentID AS "parentID",name,description FROM Tag WHERE ID = $(id);
END


TRANSACTION selectTagByName
PREPROCESS
BEGIN
	INTO normalizedName DO name( name );	-- call 'name' normalizer
END
BEGIN
	INTO . DO NONEMPTY UNIQUE SELECT ID AS id,parentID AS "parentID",name,description FROM Tag WHERE normalizedName = $(normalizedName);
END


TRANSACTION selectTopTag
BEGIN
	DO treeSelectTopNodes<Tag>( $(id));
END


TRANSACTION selectTagTree
RESULT FILTER resfilterTreeView
BEGIN
	DO treeSelectSubNodes<Tag>( $(id));
END


TRANSACTION selectTagSet
BEGIN
	DO createIdList();
	DO createIdUnion();
	FOREACH /tag DO INSERT INTO IDlist (ID) VALUES ($(id));
	FOREACH /add DO INSERT INTO IDlist (ID) VALUES ($(id));
	DO INSERT INTO IDunion SELECT DISTINCT ID FROM IDlist;

	INTO tag DO SELECT IDunion.ID AS id, TagPath.name AS name
		FROM TagPath, IDunion
		WHERE TagPath.ID = IDunion.ID
		ORDER BY TagPath.ID;

	DO dropIdList();
	DO dropIdUnion();
END


