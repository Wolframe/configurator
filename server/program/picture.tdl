INCLUDE dragAndDrop.tdl


TRANSACTION addPicture
PREPROC
	INTO . DO preprocImage( . );	-- call image preprocessing
ENDPROC
BEGIN
	DO SELECT COALESCE( MAX(orderNumber), 1) FROM Picture;
	DO INSERT INTO Picture( caption, info, image, width, height, thumbnail, orderNumber )
		VALUES ($(caption), $(info), $(image), $(width), $(height), $(thumbnail), $1+1 );
	DO NONEMPTY UNIQUE getLastPictureID( );
	FOREACH tags/tag/id DO INSERT INTO PictureTag( pictureID, tagID ) VALUES( $1, $(.) );
END


TRANSACTION updatePicture
PREPROC
	INTO . DO preprocImage( . );	-- call image preprocessing
ENDPROC
BEGIN
	DO UPDATE Picture SET
		caption = $(caption), info = $(info), image = $(image),
		width = $(width), height = $(height), thumbnail = $(thumbnail)
		WHERE ID = $(id);
	DO DELETE FROM PictureTag WHERE pictureID = $(id);
	FOREACH tags/tag DO INSERT INTO PictureTag( pictureID, tagID ) VALUES( $(/id), $(id) );
	DO DELETE FROM PictureTag WHERE tagID IS NULL;
	DO DELETE FROM PictureTag WHERE pictureID IS NULL;
END


TRANSACTION deletePicture
BEGIN
	DO DELETE FROM PictureTag WHERE PictureID = $(id);
	DO DELETE FROM Picture WHERE ID = $(id);
END


TRANSACTION selectPicturePreviewList
PREPROC
	FOREACH search INTO key DO preprocSearchQueryString( . );	-- call 'name' normalizer
ENDPROC
BEGIN
	INTO picture DO
		SELECT Picture.ID AS "id", thumbnail, caption, coalesce( info, '' ) AS "info",
			coalesce( group_concat( TagPath.name ), '' ) as tagstring
		FROM Picture
		LEFT JOIN PictureTag
		ON PictureTag.pictureID = Picture.ID
		LEFT JOIN TagPath
		ON PictureTag.tagID = TagPath.ID
		WHERE coalesce( TagPath.normalizedName, '' ) like $(search/key)
		GROUP BY Picture.ID, Picture.thumbnail, Picture.caption, Picture.info,
			Picture.width, Picture.height, Picture.image, Picture.orderNumber
		ORDER BY Picture.orderNumber;
END


TRANSACTION selectPicture
BEGIN
	INTO . DO UNIQUE
		SELECT Picture.ID AS "id", image, caption, coalesce( info, '' ) AS "info", width, height,
			coalesce( group_concat( distinct TagPath.name ), '' ) as tagstring,
			3*length(image)/4+2 as size,
			coalesce( group_concat( distinct Category.name ), '(none)' ) as used_categories,
			coalesce( group_concat( distinct Feature.name ), '(none)' ) as used_features,
			coalesce( group_concat( distinct Manufacturer.name ), '(none)' ) as used_manufacturers,
			coalesce( group_concat( distinct Component.name ), '(none)' ) as used_components
		FROM Picture
		LEFT JOIN PictureTag
		ON PictureTag.pictureID = Picture.ID
		LEFT JOIN TagPath
		ON PictureTag.tagID = TagPath.ID
		LEFT JOIN CategoryPicture
		ON CategoryPicture.pictureID = Picture.ID
		LEFT JOIN Category
		ON CategoryPicture.categoryID = Category.ID
		LEFT JOIN FeaturePicture
		ON FeaturePicture.pictureID = Picture.ID
		LEFT JOIN Feature
		ON FeaturePicture.featureID = Feature.ID
		LEFT JOIN Manufacturer
		ON Manufacturer.logo = Picture.ID
		LEFT JOIN ComponentPicture
		ON ComponentPicture.pictureID = Picture.ID
		LEFT JOIN Component
		ON ComponentPicture.componentID = Component.ID
		WHERE Picture.ID = $(id)
		GROUP BY Picture.ID, Picture.image, Picture.caption, Picture.info,
			Picture.width, Picture.height;

	INTO tags/tag DO
		select Tag.ID AS "id", name as "_"
		FROM Tag
		LEFT JOIN PictureTag
		ON PictureTag.tagID = Tag.ID
		LEFT JOIN Picture
		ON PictureTag.pictureID = Picture.ID
		WHERE Picture.ID = $(id);
END


TRANSACTION selectPictureAttributes
BEGIN
	INTO picture DO UNIQUE
		SELECT Picture.ID AS "id", caption, coalesce( info, '' ) AS "info" FROM Picture
		WHERE Picture.ID = $(id);
	INTO tag DO
		select Tag.ID AS "id", name as _ FROM Tag,PictureTag,Picture
		WHERE PictureTag.tagID = Tag.ID AND PictureTag.pictureID = Picture.ID AND Picture.ID = $(id);
END


TRANSACTION selectPictureTagList
BEGIN
	INTO tag DO SELECT PictureTag.tagID AS id, name
		FROM PictureTag, TagPath
		WHERE PictureTag.tagID = TagPath.ID
		AND PictureTag.pictureID = $(id)
		ORDER BY PictureTag.tagID;
END


TRANSACTION selectPictureThumbnailList
BEGIN
	DO createIdList();
	DO createIdUnion();

	FOREACH /picture DO INSERT INTO IDlist (ID) VALUES ($(id));
	FOREACH /add DO INSERT INTO IDlist (ID) VALUES ($(id));

	DO INSERT INTO IDunion SELECT DISTINCT ID FROM IDlist;
	INTO picture DO SELECT Picture.ID AS "id", thumbnail, caption FROM Picture, IDunion WHERE Picture.ID = IDunion.ID ORDER BY Picture.orderNumber;

	DO dropIdList();
	DO dropIdUnion();
END


TRANSACTION selectPictureThumbnail
BEGIN
	INTO . DO SELECT Picture.ID AS "id", thumbnail, caption
		FROM Picture
		WHERE Picture.ID = $(id);
END


TRANSACTION changePictureOrder
-- Implementation of drag&drop (move) in global picture list
BEGIN
	DO listGlobalMoveElement<Picture,ID>( $(srcid), $(dstid));
END


